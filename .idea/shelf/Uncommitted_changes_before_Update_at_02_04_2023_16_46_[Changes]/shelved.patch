Index: grass/grass/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"grass URL Configuration\r\n\r\nThe `urlpatterns` list routes URLs to views. For more information please see:\r\n    https://docs.djangoproject.com/en/4.0/topics/http/urls/\r\nExamples:\r\nFunction views\r\n    1. Add an import:  from my_app import views\r\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\r\nClass-based views\r\n    1. Add an import:  from other_app.views import Home\r\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\r\nIncluding another URLconf\r\n    1. Import the include() function: from django.urls import include, path\r\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\r\n\"\"\"\r\nfrom django.contrib import admin\r\nfrom django.urls import path, include, re_path\r\nfrom django.views.generic import RedirectView\r\nfrom django.conf.urls.static import static\r\nfrom .settings import MEDIA_URL, MEDIA_ROOT\r\nfrom profile_app.views import CompanyListView, ProfileListView\r\nfrom chat_app.views import UsersListView\r\nfrom django.contrib.auth.decorators import login_required\r\n\r\nfrom django.views.generic import TemplateView, ListView\r\n\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    path('accounts/', include('signup_app.urls')),\r\n    path('accounts/', include('django.contrib.auth.urls')),\r\n    path('home/', include('home_app.urls')),\r\n    path('', RedirectView.as_view(url='home/')),\r\n    path('profile/', include('profile_app.urls')),\r\n    path('companies/', CompanyListView.as_view(), name='companies'),\r\n    path('profiles/', ProfileListView.as_view(), name='profiles'),\r\n    path('vacancy/', include('vacancy_app.urls')),\r\n    path('chat/', include('django_private_chat2.urls', namespace='django_private_chat2')),\r\n    path('chat/', login_required(TemplateView.as_view(template_name='chat.html')), name='chat'),\r\n    path('chat/users/', UsersListView.as_view(), name='users_list'),\r\n]\r\n\r\nurlpatterns += static(MEDIA_URL, document_root=MEDIA_ROOT)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/grass/grass/urls.py b/grass/grass/urls.py
--- a/grass/grass/urls.py	(revision 22d2751ebc07f989025ee6f6bc21e501f099893c)
+++ b/grass/grass/urls.py	(date 1679865036362)
@@ -19,7 +19,7 @@
 from django.conf.urls.static import static
 from .settings import MEDIA_URL, MEDIA_ROOT
 from profile_app.views import CompanyListView, ProfileListView
-from chat_app.views import UsersListView
+# from chat_app.views import UsersListView
 from django.contrib.auth.decorators import login_required
 
 from django.views.generic import TemplateView, ListView
@@ -34,9 +34,9 @@
     path('companies/', CompanyListView.as_view(), name='companies'),
     path('profiles/', ProfileListView.as_view(), name='profiles'),
     path('vacancy/', include('vacancy_app.urls')),
-    path('chat/', include('django_private_chat2.urls', namespace='django_private_chat2')),
-    path('chat/', login_required(TemplateView.as_view(template_name='chat.html')), name='chat'),
-    path('chat/users/', UsersListView.as_view(), name='users_list'),
+    # path('chat/', include('django_private_chat2.urls', namespace='django_private_chat2')),
+    # path('chat/', login_required(TemplateView.as_view(template_name='chat.html')), name='chat'),
+    # path('chat/users/', UsersListView.as_view(), name='users_list'),
 ]
 
 urlpatterns += static(MEDIA_URL, document_root=MEDIA_ROOT)
Index: grass/grass/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nDjango settings for grass project.\r\n\r\nGenerated by 'django-admin startproject' using Django 4.0.4.\r\n\r\nFor more information on this file, see\r\nhttps://docs.djangoproject.com/en/4.0/topics/settings/\r\n\r\nFor the full list of settings and their values, see\r\nhttps://docs.djangoproject.com/en/4.0/ref/settings/\r\n\"\"\"\r\n\r\nfrom pathlib import Path\r\nimport os\r\nfrom dotenv import load_dotenv, find_dotenv\r\n\r\nload_dotenv(find_dotenv())\r\n\r\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\r\nBASE_DIR = Path(__file__).resolve().parent.parent\r\n\r\n\r\n# Quick-start development settings - unsuitable for production\r\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\r\n\r\n# SECURITY WARNING: keep the secret key used in production secret!\r\nSECRET_KEY=\"6yki$9uz-i+2ax6mq)5o#y=p97behim4_)#fyl8_vo(_yyp%!@\"\r\n\r\n# SECURITY WARNING: don't run with debug turned on in production!\r\nDEBUG = True\r\n\r\nALLOWED_HOSTS = [\r\n    'kashnikov1.pythonanywhere.com',\r\n    '127.0.0.1:8000',\r\n    '127.0.0.1',\r\n]\r\n\r\n# Application definition\r\nINSTALLED_APPS = [\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'phonenumber_field',\r\n    'users_app',\r\n    'home_app',\r\n    'signup_app',\r\n    'django_simple_bulma',\r\n    'profile_app',\r\n    'vacancy_app',\r\n    'django_private_chat2.apps.DjangoPrivateChat2Config',\r\n    'city_app',\r\n    'chat_app',\r\n    'django_extensions',\r\n]\r\n\r\nMIDDLEWARE = [\r\n    'django.middleware.security.SecurityMiddleware',\r\n    'django.contrib.sessions.middleware.SessionMiddleware',\r\n    'django.middleware.common.CommonMiddleware',\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n    'django.contrib.messages.middleware.MessageMiddleware',\r\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\n\r\nROOT_URLCONF = 'grass.urls'\r\n\r\n# URL redirecting after a successful authentication\r\nLOGIN_REDIRECT_URL = 'home'\r\nLOGIN_URL = '/accounts/login'\r\nLOGOUT_REDIRECT_URL = '/accounts/login'\r\n\r\n# Base url to serve media files\r\nMEDIA_URL = 'media/'\r\n\r\n# Path where media is stored\r\nMEDIA_ROOT = BASE_DIR / 'media/'\r\n\r\nTEMPLATES = [\r\n    {\r\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\r\n        'DIRS': [BASE_DIR / \"templates\"],\r\n        'APP_DIRS': True,\r\n        'OPTIONS': {\r\n            'context_processors': [\r\n                'django.template.context_processors.debug',\r\n                'django.template.context_processors.request',\r\n                'django.contrib.auth.context_processors.auth',\r\n                'django.contrib.messages.context_processors.messages',\r\n            ],\r\n        },\r\n    },\r\n]\r\n\r\nWSGI_APPLICATION = 'grass.wsgi.application'\r\n\r\n\r\n# Database\r\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\r\n\r\nDATABASES = {\r\n    'default': {\r\n        'ENGINE': 'django.db.backends.sqlite3',\r\n        'NAME': BASE_DIR / 'db.sqlite3',\r\n    }\r\n}\r\n\r\n\r\n# Password validation\r\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\r\n\r\nAUTH_PASSWORD_VALIDATORS = [\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\r\n    },\r\n    {\r\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\r\n    },\r\n]\r\n\r\n\r\n# Internationalization\r\n# https://docs.djangoproject.com/en/4.0/topics/i18n/\r\n\r\nLANGUAGE_CODE = 'en-us'\r\n\r\nTIME_ZONE = 'Europe/Moscow'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_TZ = True\r\n\r\n\r\n# Static files (CSS, JavaScript, Images)\r\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\r\nSTATIC_URL = '/static/'\r\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\r\nSTATICFILES_DIRS = [\r\n    BASE_DIR / 'static',\r\n]\r\n\r\nSTATICFILES_FINDERS = [\r\n  # First add the two default Finders, since this will overwrite the default.\r\n  'django.contrib.staticfiles.finders.FileSystemFinder',\r\n  'django.contrib.staticfiles.finders.AppDirectoriesFinder',\r\n\r\n  # Now add our custom SimpleBulma one.\r\n  'django_simple_bulma.finders.SimpleBulmaFinder',\r\n]\r\n\r\n# Default primary key field type\r\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\r\n\r\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\r\n\r\nAUTH_USER_MODEL = 'users_app.CustomUser'\r\n\r\n# EMAIL\r\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\r\nEMAIL_HOST = 'smtp.yandex.ru'\r\nEMAIL_PORT = 465\r\n#FIXME\r\nEMAIL_HOST_USER = 'django-auth@'\r\n#FIXME\r\nEMAIL_HOST_PASSWORD = 'secret123'\r\nEMAIL_USE_SSL = True\r\n#FIXME\r\nDEFAULT_FROM_EMAIL = 'django-auth@'\r\n\r\n#chat settings\r\n# CHAT_WS_SERVER_HOST = 'localhost'\r\n# CHAT_WS_SERVER_PORT = 5002\r\n# CHAT_WS_SERVER_PROTOCOL = 'ws'\r\n\r\n# Custom settings for django-simple-bulma\r\nBULMA_SETTINGS = {\r\n    \"custom_scss\": [\r\n        \"css/bulma.sass\",\r\n        \"css/bulma.scss\",\r\n    ],\r\n    \"variables\": {\r\n        \"green\": \"#A7C957\",\r\n        \"primary\": \"#000000\",\r\n        \"danger\": \"#BC4749\",\r\n        \"white-ter\": \"#F2E8CF\",\r\n    },\r\n    \"alt_variables\": {\r\n        \"primary\": \"#fff\",\r\n    },\r\n    \"output_style\": \"compressed\",\r\n    \"fontawesome_token\": \"e761a01be3\",\r\n}\r\n\r\nASGI_APPLICATION = 'grass.chat_app.routing.application'\r\n\r\n\r\n# Uncomment this to try out RabbitMQ layer - install channels_rabbitmq>=3.0.0 first\r\n# CHANNEL_LAYERS = {\r\n#     \"default\": {\r\n#         \"BACKEND\": \"channels_rabbitmq.core.RabbitmqChannelLayer\",\r\n#         \"CONFIG\": {\r\n#             \"host\": \"amqp://guest:guest@127.0.0.1:5672/\",\r\n#         },\r\n#     },\r\n# }\r\n\r\n\r\nCHANNEL_LAYERS = {\r\n    'default': {\r\n        'BACKEND': 'channels.layers.InMemoryChannelLayer'\r\n    }\r\n}\r\nLOGGING = {\r\n    'version': 1,\r\n    'disable_existing_loggers': False,\r\n    'handlers': {\r\n        'console': {\r\n            'class': 'logging.StreamHandler',\r\n        },\r\n    },\r\n    'loggers': {\r\n        'django.db.backends': {\r\n            'level': 'DEBUG',\r\n            'handlers': ['console'],\r\n        }\r\n    },\r\n    # Uncomment this to view django_private_chat2's logs\r\n\r\n    # 'root': {\r\n    #     'handlers': ['console'],\r\n    #     'level': 'INFO',\r\n    # },\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/grass/grass/settings.py b/grass/grass/settings.py
--- a/grass/grass/settings.py	(revision 22d2751ebc07f989025ee6f6bc21e501f099893c)
+++ b/grass/grass/settings.py	(date 1679864843862)
@@ -50,9 +50,8 @@
     'django_simple_bulma',
     'profile_app',
     'vacancy_app',
-    'django_private_chat2.apps.DjangoPrivateChat2Config',
     'city_app',
-    'chat_app',
+    # 'chat_app',
     'django_extensions',
 ]
 
Index: grass/chat_app/routing.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from channels.routing import ProtocolTypeRouter, URLRouter\r\nfrom channels.auth import AuthMiddlewareStack\r\nfrom django_private_chat2 import urls\r\n\r\napplication = ProtocolTypeRouter({\r\n    \"websocket\": AuthMiddlewareStack(\r\n        URLRouter(\r\n            urls.websocket_urlpatterns\r\n        )\r\n    ),\r\n})\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/grass/chat_app/routing.py b/grass/chat_app/routing.py
--- a/grass/chat_app/routing.py	(revision 22d2751ebc07f989025ee6f6bc21e501f099893c)
+++ b/grass/chat_app/routing.py	(date 1679864951891)
@@ -1,12 +1,12 @@
 from channels.routing import ProtocolTypeRouter, URLRouter
 from channels.auth import AuthMiddlewareStack
-from django_private_chat2 import urls
+# from django_private_chat2 import urls
 
-application = ProtocolTypeRouter({
-    "websocket": AuthMiddlewareStack(
-        URLRouter(
-            urls.websocket_urlpatterns
-        )
-    ),
-})
+# application = ProtocolTypeRouter({
+#     "websocket": AuthMiddlewareStack(
+#         URLRouter(
+#             urls.websocket_urlpatterns
+#         )
+#     ),
+# })
 
